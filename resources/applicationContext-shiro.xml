<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager"/> 
	</bean>

	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
	 	<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('hBlzKg78ajaZuTE0VLzDDg==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	
	 <!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<!-- <property name="loginUrl" value="/login.jsp"/> -->
	</bean> 

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
 	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="604800" /><!-- 7天 -->
	</bean>   
	
	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.py.zsdApp.service.ShiroDbRealm" depends-on="userMapper">
		<property name="userService" ref="userService"/>
	</bean>
	
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">   
        <property name="redirectUrl" value="/login"/>   
    </bean>  
	 
	<!-- Shiro Filter 安全认证过滤器  -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		
		<property name="filters">  
	        <util:map>  
	            <entry key="authc" value-ref="formAuthenticationFilter"/>  
	            <!-- <entry key="ssl" value-ref="sslFilter"/>   -->
	            <entry key="logout" value-ref="logoutFilter" />
	        </util:map>  
	    </property>  
    
		<!-- 
			loginUrl：登陆页面，用户登陆不成功，自动返回此页面。
			successUrl：登陆成功后跳转此页面 
		-->
		<property name="loginUrl" value="/login" />
		<!-- <property name="successUrl" value="/index" /> -->
		
		<property name="successUrl" value="/loginSuccess" />
		
		<property name="unauthorizedUrl" value="/login" />
		
		<!-- 
		filterChainDefinitions：设置url的访问权限。
			1.anon表示不用验证，都可以访问。
			2.anthc：authc filter 监听，不登陆不能访问。
			3.logout：logout filter监听。
			没有列出的常用配置：perms["remote:invoke"] ：需要角色romote 和权限invoke才能访问。
			roles["admin"]需要角色admin才能访问。
			设置可用“,”隔开，如：/admin/test = authc,roles[admin]  
		-->
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/index = user
				/logout = logout
				
				/user/** = user
				/news/** = user
				/basicinformation/** = user
				/friendlyLink/**=user
				/imgnews/**=user
				/sysLog/**=user
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
	 	<property name="cacheManager" ref="ehcacheManagerFactory"/>
		<!-- <property name="cacheManagerConfigFile" value="classpath:security/ehcache-shiro.xml"/> -->
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>