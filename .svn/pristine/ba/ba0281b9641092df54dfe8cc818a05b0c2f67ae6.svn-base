<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.py.zsdApp.dao.ZsdMaillistMapper">
  <resultMap id="BaseResultMap" type="com.py.zsdApp.entity.ZsdMaillist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="friend_user_id" jdbcType="INTEGER" property="friendUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="grouping" jdbcType="VARCHAR" property="grouping" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, friend_user_id, create_time, grouping, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zsd_maillist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zsd_maillist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.py.zsdApp.entity.ZsdMaillist">
    insert into zsd_maillist (id, user_id, friend_user_id, 
      create_time, grouping, remark
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{grouping,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.py.zsdApp.entity.ZsdMaillist">
    insert into zsd_maillist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="friendUserId != null">
        friend_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="grouping != null">
        grouping,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendUserId != null">
        #{friendUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grouping != null">
        #{grouping,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.py.zsdApp.entity.ZsdMaillist">
    update zsd_maillist
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendUserId != null">
        friend_user_id = #{friendUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grouping != null">
        grouping = #{grouping,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.py.zsdApp.entity.ZsdMaillist">
    update zsd_maillist
    set user_id = #{userId,jdbcType=INTEGER},
      friend_user_id = #{friendUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      grouping = #{grouping,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByfirend" parameterType="com.py.zsdApp.entity.ZsdMaillist" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zsd_maillist 
    where 1=1
    <if test="id !=null">
    and id=#{id,jdbcType=INTEGER}
    </if>
    <if test="userId !=null">
    and user_id=#{userId,jdbcType=INTEGER}
    </if>
    <if test="friendUserId != null">
      and  friend_user_id = #{friendUserId,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
      and  create_time = #{createTime,jdbcType=DATETIME}
      </if>
      <if test="grouping != null">
      and  grouping = #{grouping,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
       and remark = #{remark,jdbcType=VARCHAR}
      </if>
      order by create_time desc
  </select>
</mapper>